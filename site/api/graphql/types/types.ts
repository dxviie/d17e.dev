/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ArticleFiltersInput: { // input type
    and?: Array<NexusGenInputs['ArticleFiltersInput'] | null> | null; // [ArticleFiltersInput]
    author?: NexusGenInputs['AuthorFiltersInput'] | null; // AuthorFiltersInput
    body?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['ArticleFiltersInput'] | null; // ArticleFiltersInput
    or?: Array<NexusGenInputs['ArticleFiltersInput'] | null> | null; // [ArticleFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    slug?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    tags?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  ArticleInput: { // input type
    author?: string | null; // ID
    body?: string | null; // String
    cover?: string | null; // ID
    gallery?: Array<string | null> | null; // [ID]
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    slug?: string | null; // String
    tags?: Array<string | null> | null; // [ID]
    title?: string | null; // String
  }
  AuthorFiltersInput: { // input type
    and?: Array<NexusGenInputs['AuthorFiltersInput'] | null> | null; // [AuthorFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['AuthorFiltersInput'] | null; // AuthorFiltersInput
    or?: Array<NexusGenInputs['AuthorFiltersInput'] | null> | null; // [AuthorFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  AuthorInput: { // input type
    avatar?: string | null; // ID
    name?: string | null; // String
  }
  BooleanFilterInput: { // input type
    and?: Array<boolean | null> | null; // [Boolean]
    between?: Array<boolean | null> | null; // [Boolean]
    contains?: boolean | null; // Boolean
    containsi?: boolean | null; // Boolean
    endsWith?: boolean | null; // Boolean
    eq?: boolean | null; // Boolean
    eqi?: boolean | null; // Boolean
    gt?: boolean | null; // Boolean
    gte?: boolean | null; // Boolean
    in?: Array<boolean | null> | null; // [Boolean]
    lt?: boolean | null; // Boolean
    lte?: boolean | null; // Boolean
    ne?: boolean | null; // Boolean
    not?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    notContains?: boolean | null; // Boolean
    notContainsi?: boolean | null; // Boolean
    notIn?: Array<boolean | null> | null; // [Boolean]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<boolean | null> | null; // [Boolean]
    startsWith?: boolean | null; // Boolean
  }
  ComponentSharedMetaSocialFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentSharedMetaSocialFiltersInput'] | null> | null; // [ComponentSharedMetaSocialFiltersInput]
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentSharedMetaSocialFiltersInput'] | null; // ComponentSharedMetaSocialFiltersInput
    or?: Array<NexusGenInputs['ComponentSharedMetaSocialFiltersInput'] | null> | null; // [ComponentSharedMetaSocialFiltersInput]
    socialNetwork?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentSharedMetaSocialInput: { // input type
    description?: string | null; // String
    id?: string | null; // ID
    image?: string | null; // ID
    socialNetwork?: NexusGenEnums['ENUM_COMPONENTSHAREDMETASOCIAL_SOCIALNETWORK'] | null; // ENUM_COMPONENTSHAREDMETASOCIAL_SOCIALNETWORK
    title?: string | null; // String
  }
  ComponentSharedSeoFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentSharedSeoFiltersInput'] | null> | null; // [ComponentSharedSeoFiltersInput]
    canonicalURL?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    keywords?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    metaDescription?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    metaRobots?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    metaSocial?: NexusGenInputs['ComponentSharedMetaSocialFiltersInput'] | null; // ComponentSharedMetaSocialFiltersInput
    metaTitle?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    metaViewport?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentSharedSeoFiltersInput'] | null; // ComponentSharedSeoFiltersInput
    or?: Array<NexusGenInputs['ComponentSharedSeoFiltersInput'] | null> | null; // [ComponentSharedSeoFiltersInput]
    structuredData?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
  }
  ComponentSharedSeoInput: { // input type
    canonicalURL?: string | null; // String
    id?: string | null; // ID
    keywords?: string | null; // String
    metaDescription?: string | null; // String
    metaImage?: string | null; // ID
    metaRobots?: string | null; // String
    metaSocial?: Array<NexusGenInputs['ComponentSharedMetaSocialInput'] | null> | null; // [ComponentSharedMetaSocialInput]
    metaTitle?: string | null; // String
    metaViewport?: string | null; // String
    structuredData?: NexusGenScalars['JSON'] | null; // JSON
  }
  DateFilterInput: { // input type
    and?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    between?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    contains?: NexusGenScalars['Date'] | null; // Date
    containsi?: NexusGenScalars['Date'] | null; // Date
    endsWith?: NexusGenScalars['Date'] | null; // Date
    eq?: NexusGenScalars['Date'] | null; // Date
    eqi?: NexusGenScalars['Date'] | null; // Date
    gt?: NexusGenScalars['Date'] | null; // Date
    gte?: NexusGenScalars['Date'] | null; // Date
    in?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    lt?: NexusGenScalars['Date'] | null; // Date
    lte?: NexusGenScalars['Date'] | null; // Date
    ne?: NexusGenScalars['Date'] | null; // Date
    not?: NexusGenInputs['DateFilterInput'] | null; // DateFilterInput
    notContains?: NexusGenScalars['Date'] | null; // Date
    notContainsi?: NexusGenScalars['Date'] | null; // Date
    notIn?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    startsWith?: NexusGenScalars['Date'] | null; // Date
  }
  DateTimeFilterInput: { // input type
    and?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    between?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    contains?: NexusGenScalars['DateTime'] | null; // DateTime
    containsi?: NexusGenScalars['DateTime'] | null; // DateTime
    endsWith?: NexusGenScalars['DateTime'] | null; // DateTime
    eq?: NexusGenScalars['DateTime'] | null; // DateTime
    eqi?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    ne?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    notContains?: NexusGenScalars['DateTime'] | null; // DateTime
    notContainsi?: NexusGenScalars['DateTime'] | null; // DateTime
    notIn?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    startsWith?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  FileInfoInput: { // input type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    name?: string | null; // String
  }
  FloatFilterInput: { // input type
    and?: Array<number | null> | null; // [Float]
    between?: Array<number | null> | null; // [Float]
    contains?: number | null; // Float
    containsi?: number | null; // Float
    endsWith?: number | null; // Float
    eq?: number | null; // Float
    eqi?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: Array<number | null> | null; // [Float]
    lt?: number | null; // Float
    lte?: number | null; // Float
    ne?: number | null; // Float
    not?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    notContains?: number | null; // Float
    notContainsi?: number | null; // Float
    notIn?: Array<number | null> | null; // [Float]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<number | null> | null; // [Float]
    startsWith?: number | null; // Float
  }
  I18NLocaleFiltersInput: { // input type
    and?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
    or?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  I18NLocaleInput: { // input type
    code?: string | null; // String
    name?: string | null; // String
  }
  IDFilterInput: { // input type
    and?: Array<string | null> | null; // [ID]
    between?: Array<string | null> | null; // [ID]
    contains?: string | null; // ID
    containsi?: string | null; // ID
    endsWith?: string | null; // ID
    eq?: string | null; // ID
    eqi?: string | null; // ID
    gt?: string | null; // ID
    gte?: string | null; // ID
    in?: Array<string | null> | null; // [ID]
    lt?: string | null; // ID
    lte?: string | null; // ID
    ne?: string | null; // ID
    not?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    notContains?: string | null; // ID
    notContainsi?: string | null; // ID
    notIn?: Array<string | null> | null; // [ID]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<string | null> | null; // [ID]
    startsWith?: string | null; // ID
  }
  IntFilterInput: { // input type
    and?: Array<number | null> | null; // [Int]
    between?: Array<number | null> | null; // [Int]
    contains?: number | null; // Int
    containsi?: number | null; // Int
    endsWith?: number | null; // Int
    eq?: number | null; // Int
    eqi?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: Array<number | null> | null; // [Int]
    lt?: number | null; // Int
    lte?: number | null; // Int
    ne?: number | null; // Int
    not?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    notContains?: number | null; // Int
    notContainsi?: number | null; // Int
    notIn?: Array<number | null> | null; // [Int]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<number | null> | null; // [Int]
    startsWith?: number | null; // Int
  }
  JSONFilterInput: { // input type
    and?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    between?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    contains?: NexusGenScalars['JSON'] | null; // JSON
    containsi?: NexusGenScalars['JSON'] | null; // JSON
    endsWith?: NexusGenScalars['JSON'] | null; // JSON
    eq?: NexusGenScalars['JSON'] | null; // JSON
    eqi?: NexusGenScalars['JSON'] | null; // JSON
    gt?: NexusGenScalars['JSON'] | null; // JSON
    gte?: NexusGenScalars['JSON'] | null; // JSON
    in?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    lt?: NexusGenScalars['JSON'] | null; // JSON
    lte?: NexusGenScalars['JSON'] | null; // JSON
    ne?: NexusGenScalars['JSON'] | null; // JSON
    not?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    notContains?: NexusGenScalars['JSON'] | null; // JSON
    notContainsi?: NexusGenScalars['JSON'] | null; // JSON
    notIn?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    startsWith?: NexusGenScalars['JSON'] | null; // JSON
  }
  LinkFiltersInput: { // input type
    and?: Array<NexusGenInputs['LinkFiltersInput'] | null> | null; // [LinkFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    link?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['LinkFiltersInput'] | null; // LinkFiltersInput
    or?: Array<NexusGenInputs['LinkFiltersInput'] | null> | null; // [LinkFiltersInput]
    tags?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  LinkInput: { // input type
    description?: string | null; // String
    image?: string | null; // ID
    link?: string | null; // String
    tags?: Array<string | null> | null; // [ID]
    title?: string | null; // String
  }
  LongFilterInput: { // input type
    and?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    between?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    contains?: NexusGenScalars['Long'] | null; // Long
    containsi?: NexusGenScalars['Long'] | null; // Long
    endsWith?: NexusGenScalars['Long'] | null; // Long
    eq?: NexusGenScalars['Long'] | null; // Long
    eqi?: NexusGenScalars['Long'] | null; // Long
    gt?: NexusGenScalars['Long'] | null; // Long
    gte?: NexusGenScalars['Long'] | null; // Long
    in?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    lt?: NexusGenScalars['Long'] | null; // Long
    lte?: NexusGenScalars['Long'] | null; // Long
    ne?: NexusGenScalars['Long'] | null; // Long
    not?: NexusGenInputs['LongFilterInput'] | null; // LongFilterInput
    notContains?: NexusGenScalars['Long'] | null; // Long
    notContainsi?: NexusGenScalars['Long'] | null; // Long
    notIn?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    startsWith?: NexusGenScalars['Long'] | null; // Long
  }
  PaginationArg: { // input type
    limit?: number | null; // Int
    page?: number | null; // Int
    pageSize?: number | null; // Int
    start?: number | null; // Int
  }
  PostFiltersInput: { // input type
    and?: Array<NexusGenInputs['PostFiltersInput'] | null> | null; // [PostFiltersInput]
    author?: NexusGenInputs['AuthorFiltersInput'] | null; // AuthorFiltersInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    link?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    message?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['PostFiltersInput'] | null; // PostFiltersInput
    or?: Array<NexusGenInputs['PostFiltersInput'] | null> | null; // [PostFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    slug?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    tags?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  PostInput: { // input type
    author?: string | null; // ID
    content?: string | null; // ID
    link?: string | null; // String
    message?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    slug?: string | null; // String
    tags?: Array<string | null> | null; // [ID]
    title?: string | null; // String
  }
  QuoteFiltersInput: { // input type
    and?: Array<NexusGenInputs['QuoteFiltersInput'] | null> | null; // [QuoteFiltersInput]
    author?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    context?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    link?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['QuoteFiltersInput'] | null; // QuoteFiltersInput
    or?: Array<NexusGenInputs['QuoteFiltersInput'] | null> | null; // [QuoteFiltersInput]
    quote?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    tags?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  QuoteInput: { // input type
    author?: string | null; // String
    context?: string | null; // String
    link?: string | null; // String
    quote?: string | null; // String
    tags?: Array<string | null> | null; // [ID]
  }
  StringFilterInput: { // input type
    and?: Array<string | null> | null; // [String]
    between?: Array<string | null> | null; // [String]
    contains?: string | null; // String
    containsi?: string | null; // String
    endsWith?: string | null; // String
    eq?: string | null; // String
    eqi?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: Array<string | null> | null; // [String]
    lt?: string | null; // String
    lte?: string | null; // String
    ne?: string | null; // String
    not?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    notContains?: string | null; // String
    notContainsi?: string | null; // String
    notIn?: Array<string | null> | null; // [String]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<string | null> | null; // [String]
    startsWith?: string | null; // String
  }
  TagFiltersInput: { // input type
    and?: Array<NexusGenInputs['TagFiltersInput'] | null> | null; // [TagFiltersInput]
    articles?: NexusGenInputs['ArticleFiltersInput'] | null; // ArticleFiltersInput
    color?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    links?: NexusGenInputs['LinkFiltersInput'] | null; // LinkFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    or?: Array<NexusGenInputs['TagFiltersInput'] | null> | null; // [TagFiltersInput]
    posts?: NexusGenInputs['PostFiltersInput'] | null; // PostFiltersInput
    quotes?: NexusGenInputs['QuoteFiltersInput'] | null; // QuoteFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  TagInput: { // input type
    articles?: Array<string | null> | null; // [ID]
    color?: string | null; // String
    links?: Array<string | null> | null; // [ID]
    name?: string | null; // String
    posts?: Array<string | null> | null; // [ID]
    quotes?: Array<string | null> | null; // [ID]
  }
  TimeFilterInput: { // input type
    and?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    between?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    contains?: NexusGenScalars['Time'] | null; // Time
    containsi?: NexusGenScalars['Time'] | null; // Time
    endsWith?: NexusGenScalars['Time'] | null; // Time
    eq?: NexusGenScalars['Time'] | null; // Time
    eqi?: NexusGenScalars['Time'] | null; // Time
    gt?: NexusGenScalars['Time'] | null; // Time
    gte?: NexusGenScalars['Time'] | null; // Time
    in?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    lt?: NexusGenScalars['Time'] | null; // Time
    lte?: NexusGenScalars['Time'] | null; // Time
    ne?: NexusGenScalars['Time'] | null; // Time
    not?: NexusGenInputs['TimeFilterInput'] | null; // TimeFilterInput
    notContains?: NexusGenScalars['Time'] | null; // Time
    notContainsi?: NexusGenScalars['Time'] | null; // Time
    notIn?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    startsWith?: NexusGenScalars['Time'] | null; // Time
  }
  UploadFileFiltersInput: { // input type
    alternativeText?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    caption?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    ext?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    folder?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    folderPath?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    formats?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    hash?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    height?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    mime?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    or?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    previewUrl?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider_metadata?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    size?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    url?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    width?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
  }
  UploadFileInput: { // input type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    ext?: string | null; // String
    folder?: string | null; // ID
    folderPath?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash?: string | null; // String
    height?: number | null; // Int
    mime?: string | null; // String
    name?: string | null; // String
    previewUrl?: string | null; // String
    provider?: string | null; // String
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size?: number | null; // Float
    url?: string | null; // String
    width?: number | null; // Int
  }
  UploadFolderFiltersInput: { // input type
    and?: Array<NexusGenInputs['UploadFolderFiltersInput'] | null> | null; // [UploadFolderFiltersInput]
    children?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    files?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    or?: Array<NexusGenInputs['UploadFolderFiltersInput'] | null> | null; // [UploadFolderFiltersInput]
    parent?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    path?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    pathId?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  UploadFolderInput: { // input type
    children?: Array<string | null> | null; // [ID]
    files?: Array<string | null> | null; // [ID]
    name?: string | null; // String
    parent?: string | null; // ID
    path?: string | null; // String
    pathId?: number | null; // Int
  }
  UsersPermissionsLoginInput: { // input type
    identifier: string; // String!
    password: string; // String!
    provider: string; // String!
  }
  UsersPermissionsPermissionFiltersInput: { // input type
    action?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  UsersPermissionsPermissionInput: { // input type
    action?: string | null; // String
    role?: string | null; // ID
  }
  UsersPermissionsRegisterInput: { // input type
    email: string; // String!
    password: string; // String!
    username: string; // String!
  }
  UsersPermissionsRoleFiltersInput: { // input type
    and?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    permissions?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    type?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    users?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
  }
  UsersPermissionsRoleInput: { // input type
    description?: string | null; // String
    name?: string | null; // String
    permissions?: Array<string | null> | null; // [ID]
    type?: string | null; // String
    users?: Array<string | null> | null; // [ID]
  }
  UsersPermissionsUserFiltersInput: { // input type
    and?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    blocked?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    confirmationToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    confirmed?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    email?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    password?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    resetPasswordToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    username?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  UsersPermissionsUserInput: { // input type
    blocked?: boolean | null; // Boolean
    confirmationToken?: string | null; // String
    confirmed?: boolean | null; // Boolean
    email?: string | null; // String
    password?: string | null; // String
    provider?: string | null; // String
    resetPasswordToken?: string | null; // String
    role?: string | null; // ID
    username?: string | null; // String
  }
}

export interface NexusGenEnums {
  ENUM_COMPONENTSHAREDMETASOCIAL_SOCIALNETWORK: "Facebook" | "Twitter"
  PublicationState: "live" | "preview"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  DateTime: any
  I18NLocaleCode: any
  JSON: any
  Long: any
  Time: any
  Upload: any
}

export interface NexusGenObjects {
  Article: { // root type
    body: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    slug: string; // String!
    title: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ArticleEntity: {};
  ArticleEntityResponse: {};
  ArticleEntityResponseCollection: {};
  ArticleRelationResponseCollection: {};
  Author: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  AuthorEntity: {};
  AuthorEntityResponse: {};
  AuthorEntityResponseCollection: {};
  AuthorRelationResponseCollection: {};
  ComponentSharedMetaSocial: { // root type
    description: string; // String!
    id: string; // ID!
    socialNetwork: NexusGenEnums['ENUM_COMPONENTSHAREDMETASOCIAL_SOCIALNETWORK']; // ENUM_COMPONENTSHAREDMETASOCIAL_SOCIALNETWORK!
    title: string; // String!
  }
  ComponentSharedSeo: { // root type
    canonicalURL?: string | null; // String
    id: string; // ID!
    keywords?: string | null; // String
    metaDescription: string; // String!
    metaRobots?: string | null; // String
    metaTitle: string; // String!
    metaViewport?: string | null; // String
    structuredData?: NexusGenScalars['JSON'] | null; // JSON
  }
  Error: { // root type
    message?: string | null; // String
  }
  I18NLocale: { // root type
    code?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleEntity: {};
  I18NLocaleEntityResponse: {};
  I18NLocaleEntityResponseCollection: {};
  I18NLocaleRelationResponseCollection: {};
  Link: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    link?: string | null; // String
    title: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  LinkEntity: {};
  LinkEntityResponse: {};
  LinkEntityResponseCollection: {};
  LinkRelationResponseCollection: {};
  Mutation: {};
  Pagination: { // root type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Post: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    link?: string | null; // String
    message?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    slug?: string | null; // String
    title: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PostEntity: {};
  PostEntityResponse: {};
  PostEntityResponseCollection: {};
  PostRelationResponseCollection: {};
  Query: {};
  Quote: { // root type
    author: string; // String!
    context?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    link?: string | null; // String
    quote: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  QuoteEntity: {};
  QuoteEntityResponse: {};
  QuoteEntityResponseCollection: {};
  QuoteRelationResponseCollection: {};
  ResponseCollectionMeta: {};
  Tag: { // root type
    color?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TagEntity: {};
  TagEntityResponse: {};
  TagEntityResponseCollection: {};
  TagRelationResponseCollection: {};
  UploadFile: { // root type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    ext?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height?: number | null; // Int
    mime: string; // String!
    name: string; // String!
    previewUrl?: string | null; // String
    provider: string; // String!
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size: number; // Float!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url: string; // String!
    width?: number | null; // Int
  }
  UploadFileEntity: {};
  UploadFileEntityResponse: {};
  UploadFileEntityResponseCollection: {};
  UploadFileRelationResponseCollection: {};
  UploadFolder: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name: string; // String!
    path: string; // String!
    pathId: number; // Int!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UploadFolderEntity: {};
  UploadFolderEntityResponse: {};
  UploadFolderEntityResponseCollection: {};
  UploadFolderRelationResponseCollection: {};
  UsersPermissionsCreateRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsDeleteRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsLoginPayload: { // root type
    jwt?: string | null; // String
    user: NexusGenRootTypes['UsersPermissionsMe']; // UsersPermissionsMe!
  }
  UsersPermissionsMe: { // root type
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    email?: string | null; // String
    id: string; // ID!
    role?: NexusGenRootTypes['UsersPermissionsMeRole'] | null; // UsersPermissionsMeRole
    username: string; // String!
  }
  UsersPermissionsMeRole: { // root type
    description?: string | null; // String
    id: string; // ID!
    name: string; // String!
    type?: string | null; // String
  }
  UsersPermissionsPasswordPayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsPermission: { // root type
    action: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsPermissionEntity: {};
  UsersPermissionsPermissionEntityResponse: {};
  UsersPermissionsPermissionEntityResponseCollection: {};
  UsersPermissionsPermissionRelationResponseCollection: {};
  UsersPermissionsRole: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    name: string; // String!
    type?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsRoleEntity: {};
  UsersPermissionsRoleEntityResponse: {};
  UsersPermissionsRoleEntityResponseCollection: {};
  UsersPermissionsRoleRelationResponseCollection: {};
  UsersPermissionsUpdateRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsUser: { // root type
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    provider?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    username: string; // String!
  }
  UsersPermissionsUserEntity: {};
  UsersPermissionsUserEntityResponse: {};
  UsersPermissionsUserEntityResponseCollection: {};
  UsersPermissionsUserRelationResponseCollection: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
  GenericMorph: NexusGenRootTypes['Article'] | NexusGenRootTypes['Author'] | NexusGenRootTypes['ComponentSharedMetaSocial'] | NexusGenRootTypes['ComponentSharedSeo'] | NexusGenRootTypes['I18NLocale'] | NexusGenRootTypes['Link'] | NexusGenRootTypes['Post'] | NexusGenRootTypes['Quote'] | NexusGenRootTypes['Tag'] | NexusGenRootTypes['UploadFile'] | NexusGenRootTypes['UploadFolder'] | NexusGenRootTypes['UsersPermissionsPermission'] | NexusGenRootTypes['UsersPermissionsRole'] | NexusGenRootTypes['UsersPermissionsUser'];
}

export type NexusGenRootTypes = NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Article: { // field return type
    author: NexusGenRootTypes['AuthorEntityResponse'] | null; // AuthorEntityResponse
    body: string; // String!
    cover: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    gallery: NexusGenRootTypes['UploadFileRelationResponseCollection'] | null; // UploadFileRelationResponseCollection
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    slug: string; // String!
    tags: NexusGenRootTypes['TagRelationResponseCollection'] | null; // TagRelationResponseCollection
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ArticleEntity: { // field return type
    attributes: NexusGenRootTypes['Article'] | null; // Article
    id: string | null; // ID
  }
  ArticleEntityResponse: { // field return type
    data: NexusGenRootTypes['ArticleEntity'] | null; // ArticleEntity
  }
  ArticleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['ArticleEntity'][]; // [ArticleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  ArticleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['ArticleEntity'][]; // [ArticleEntity!]!
  }
  Author: { // field return type
    avatar: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  AuthorEntity: { // field return type
    attributes: NexusGenRootTypes['Author'] | null; // Author
    id: string | null; // ID
  }
  AuthorEntityResponse: { // field return type
    data: NexusGenRootTypes['AuthorEntity'] | null; // AuthorEntity
  }
  AuthorEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['AuthorEntity'][]; // [AuthorEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  AuthorRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['AuthorEntity'][]; // [AuthorEntity!]!
  }
  ComponentSharedMetaSocial: { // field return type
    description: string; // String!
    id: string; // ID!
    image: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    socialNetwork: NexusGenEnums['ENUM_COMPONENTSHAREDMETASOCIAL_SOCIALNETWORK']; // ENUM_COMPONENTSHAREDMETASOCIAL_SOCIALNETWORK!
    title: string; // String!
  }
  ComponentSharedSeo: { // field return type
    canonicalURL: string | null; // String
    id: string; // ID!
    keywords: string | null; // String
    metaDescription: string; // String!
    metaImage: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    metaRobots: string | null; // String
    metaSocial: Array<NexusGenRootTypes['ComponentSharedMetaSocial'] | null> | null; // [ComponentSharedMetaSocial]
    metaTitle: string; // String!
    metaViewport: string | null; // String
    structuredData: NexusGenScalars['JSON'] | null; // JSON
  }
  Error: { // field return type
    code: string; // String!
    message: string | null; // String
  }
  I18NLocale: { // field return type
    code: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleEntity: { // field return type
    attributes: NexusGenRootTypes['I18NLocale'] | null; // I18NLocale
    id: string | null; // ID
  }
  I18NLocaleEntityResponse: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'] | null; // I18NLocaleEntity
  }
  I18NLocaleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  I18NLocaleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
  }
  Link: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    image: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    link: string | null; // String
    tags: NexusGenRootTypes['TagRelationResponseCollection'] | null; // TagRelationResponseCollection
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  LinkEntity: { // field return type
    attributes: NexusGenRootTypes['Link'] | null; // Link
    id: string | null; // ID
  }
  LinkEntityResponse: { // field return type
    data: NexusGenRootTypes['LinkEntity'] | null; // LinkEntity
  }
  LinkEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['LinkEntity'][]; // [LinkEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  LinkRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['LinkEntity'][]; // [LinkEntity!]!
  }
  Mutation: { // field return type
    changePassword: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    createArticle: NexusGenRootTypes['ArticleEntityResponse'] | null; // ArticleEntityResponse
    createAuthor: NexusGenRootTypes['AuthorEntityResponse'] | null; // AuthorEntityResponse
    createLink: NexusGenRootTypes['LinkEntityResponse'] | null; // LinkEntityResponse
    createPost: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    createQuote: NexusGenRootTypes['QuoteEntityResponse'] | null; // QuoteEntityResponse
    createTag: NexusGenRootTypes['TagEntityResponse'] | null; // TagEntityResponse
    createUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    createUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    createUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsCreateRolePayload'] | null; // UsersPermissionsCreateRolePayload
    createUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    deleteArticle: NexusGenRootTypes['ArticleEntityResponse'] | null; // ArticleEntityResponse
    deleteAuthor: NexusGenRootTypes['AuthorEntityResponse'] | null; // AuthorEntityResponse
    deleteLink: NexusGenRootTypes['LinkEntityResponse'] | null; // LinkEntityResponse
    deletePost: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    deleteQuote: NexusGenRootTypes['QuoteEntityResponse'] | null; // QuoteEntityResponse
    deleteTag: NexusGenRootTypes['TagEntityResponse'] | null; // TagEntityResponse
    deleteUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    deleteUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    deleteUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsDeleteRolePayload'] | null; // UsersPermissionsDeleteRolePayload
    deleteUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    emailConfirmation: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    forgotPassword: NexusGenRootTypes['UsersPermissionsPasswordPayload'] | null; // UsersPermissionsPasswordPayload
    login: NexusGenRootTypes['UsersPermissionsLoginPayload']; // UsersPermissionsLoginPayload!
    multipleUpload: Array<NexusGenRootTypes['UploadFileEntityResponse'] | null>; // [UploadFileEntityResponse]!
    register: NexusGenRootTypes['UsersPermissionsLoginPayload']; // UsersPermissionsLoginPayload!
    removeFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    resetPassword: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    updateArticle: NexusGenRootTypes['ArticleEntityResponse'] | null; // ArticleEntityResponse
    updateAuthor: NexusGenRootTypes['AuthorEntityResponse'] | null; // AuthorEntityResponse
    updateFileInfo: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    updateLink: NexusGenRootTypes['LinkEntityResponse'] | null; // LinkEntityResponse
    updatePost: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    updateQuote: NexusGenRootTypes['QuoteEntityResponse'] | null; // QuoteEntityResponse
    updateTag: NexusGenRootTypes['TagEntityResponse'] | null; // TagEntityResponse
    updateUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    updateUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    updateUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsUpdateRolePayload'] | null; // UsersPermissionsUpdateRolePayload
    updateUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    upload: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
  }
  Pagination: { // field return type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Post: { // field return type
    author: NexusGenRootTypes['AuthorEntityResponse'] | null; // AuthorEntityResponse
    content: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    link: string | null; // String
    message: string | null; // String
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    slug: string | null; // String
    tags: NexusGenRootTypes['TagRelationResponseCollection'] | null; // TagRelationResponseCollection
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PostEntity: { // field return type
    attributes: NexusGenRootTypes['Post'] | null; // Post
    id: string | null; // ID
  }
  PostEntityResponse: { // field return type
    data: NexusGenRootTypes['PostEntity'] | null; // PostEntity
  }
  PostEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['PostEntity'][]; // [PostEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  PostRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['PostEntity'][]; // [PostEntity!]!
  }
  Query: { // field return type
    article: NexusGenRootTypes['ArticleEntityResponse'] | null; // ArticleEntityResponse
    articles: NexusGenRootTypes['ArticleEntityResponseCollection'] | null; // ArticleEntityResponseCollection
    author: NexusGenRootTypes['AuthorEntityResponse'] | null; // AuthorEntityResponse
    authors: NexusGenRootTypes['AuthorEntityResponseCollection'] | null; // AuthorEntityResponseCollection
    i18NLocale: NexusGenRootTypes['I18NLocaleEntityResponse'] | null; // I18NLocaleEntityResponse
    i18NLocales: NexusGenRootTypes['I18NLocaleEntityResponseCollection'] | null; // I18NLocaleEntityResponseCollection
    link: NexusGenRootTypes['LinkEntityResponse'] | null; // LinkEntityResponse
    links: NexusGenRootTypes['LinkEntityResponseCollection'] | null; // LinkEntityResponseCollection
    me: NexusGenRootTypes['UsersPermissionsMe'] | null; // UsersPermissionsMe
    post: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    posts: NexusGenRootTypes['PostEntityResponseCollection'] | null; // PostEntityResponseCollection
    quote: NexusGenRootTypes['QuoteEntityResponse'] | null; // QuoteEntityResponse
    quotes: NexusGenRootTypes['QuoteEntityResponseCollection'] | null; // QuoteEntityResponseCollection
    tag: NexusGenRootTypes['TagEntityResponse'] | null; // TagEntityResponse
    tags: NexusGenRootTypes['TagEntityResponseCollection'] | null; // TagEntityResponseCollection
    uploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    uploadFiles: NexusGenRootTypes['UploadFileEntityResponseCollection'] | null; // UploadFileEntityResponseCollection
    uploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    uploadFolders: NexusGenRootTypes['UploadFolderEntityResponseCollection'] | null; // UploadFolderEntityResponseCollection
    usersPermissionsRole: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    usersPermissionsRoles: NexusGenRootTypes['UsersPermissionsRoleEntityResponseCollection'] | null; // UsersPermissionsRoleEntityResponseCollection
    usersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse'] | null; // UsersPermissionsUserEntityResponse
    usersPermissionsUsers: NexusGenRootTypes['UsersPermissionsUserEntityResponseCollection'] | null; // UsersPermissionsUserEntityResponseCollection
  }
  Quote: { // field return type
    author: string; // String!
    context: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    link: string | null; // String
    quote: string; // String!
    tags: NexusGenRootTypes['TagRelationResponseCollection'] | null; // TagRelationResponseCollection
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  QuoteEntity: { // field return type
    attributes: NexusGenRootTypes['Quote'] | null; // Quote
    id: string | null; // ID
  }
  QuoteEntityResponse: { // field return type
    data: NexusGenRootTypes['QuoteEntity'] | null; // QuoteEntity
  }
  QuoteEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['QuoteEntity'][]; // [QuoteEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  QuoteRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['QuoteEntity'][]; // [QuoteEntity!]!
  }
  ResponseCollectionMeta: { // field return type
    pagination: NexusGenRootTypes['Pagination']; // Pagination!
  }
  Tag: { // field return type
    articles: NexusGenRootTypes['ArticleRelationResponseCollection'] | null; // ArticleRelationResponseCollection
    color: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    links: NexusGenRootTypes['LinkRelationResponseCollection'] | null; // LinkRelationResponseCollection
    name: string; // String!
    posts: NexusGenRootTypes['PostRelationResponseCollection'] | null; // PostRelationResponseCollection
    quotes: NexusGenRootTypes['QuoteRelationResponseCollection'] | null; // QuoteRelationResponseCollection
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TagEntity: { // field return type
    attributes: NexusGenRootTypes['Tag'] | null; // Tag
    id: string | null; // ID
  }
  TagEntityResponse: { // field return type
    data: NexusGenRootTypes['TagEntity'] | null; // TagEntity
  }
  TagEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['TagEntity'][]; // [TagEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  TagRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['TagEntity'][]; // [TagEntity!]!
  }
  UploadFile: { // field return type
    alternativeText: string | null; // String
    caption: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    ext: string | null; // String
    formats: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height: number | null; // Int
    mime: string; // String!
    name: string; // String!
    previewUrl: string | null; // String
    provider: string; // String!
    provider_metadata: NexusGenScalars['JSON'] | null; // JSON
    related: Array<NexusGenRootTypes['GenericMorph'] | null> | null; // [GenericMorph]
    size: number; // Float!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string; // String!
    width: number | null; // Int
  }
  UploadFileEntity: { // field return type
    attributes: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    id: string | null; // ID
  }
  UploadFileEntityResponse: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'] | null; // UploadFileEntity
  }
  UploadFileEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFileRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
  }
  UploadFolder: { // field return type
    children: NexusGenRootTypes['UploadFolderRelationResponseCollection'] | null; // UploadFolderRelationResponseCollection
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    files: NexusGenRootTypes['UploadFileRelationResponseCollection'] | null; // UploadFileRelationResponseCollection
    name: string; // String!
    parent: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    path: string; // String!
    pathId: number; // Int!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UploadFolderEntity: { // field return type
    attributes: NexusGenRootTypes['UploadFolder'] | null; // UploadFolder
    id: string | null; // ID
  }
  UploadFolderEntityResponse: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'] | null; // UploadFolderEntity
  }
  UploadFolderEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'][]; // [UploadFolderEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFolderRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'][]; // [UploadFolderEntity!]!
  }
  UsersPermissionsCreateRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsDeleteRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsLoginPayload: { // field return type
    jwt: string | null; // String
    user: NexusGenRootTypes['UsersPermissionsMe']; // UsersPermissionsMe!
  }
  UsersPermissionsMe: { // field return type
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    email: string | null; // String
    id: string; // ID!
    role: NexusGenRootTypes['UsersPermissionsMeRole'] | null; // UsersPermissionsMeRole
    username: string; // String!
  }
  UsersPermissionsMeRole: { // field return type
    description: string | null; // String
    id: string; // ID!
    name: string; // String!
    type: string | null; // String
  }
  UsersPermissionsPasswordPayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsPermission: { // field return type
    action: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    role: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsPermissionEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsPermission'] | null; // UsersPermissionsPermission
    id: string | null; // ID
  }
  UsersPermissionsPermissionEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'] | null; // UsersPermissionsPermissionEntity
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsPermissionRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
  }
  UsersPermissionsRole: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    name: string; // String!
    permissions: NexusGenRootTypes['UsersPermissionsPermissionRelationResponseCollection'] | null; // UsersPermissionsPermissionRelationResponseCollection
    type: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    users: NexusGenRootTypes['UsersPermissionsUserRelationResponseCollection'] | null; // UsersPermissionsUserRelationResponseCollection
  }
  UsersPermissionsRoleEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsRole'] | null; // UsersPermissionsRole
    id: string | null; // ID
  }
  UsersPermissionsRoleEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'] | null; // UsersPermissionsRoleEntity
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsRoleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
  }
  UsersPermissionsUpdateRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsUser: { // field return type
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    provider: string | null; // String
    role: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    username: string; // String!
  }
  UsersPermissionsUserEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    id: string | null; // ID
  }
  UsersPermissionsUserEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'] | null; // UsersPermissionsUserEntity
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsUserRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
  }
}

export interface NexusGenFieldTypeNames {
  Article: { // field return type name
    author: 'AuthorEntityResponse'
    body: 'String'
    cover: 'UploadFileEntityResponse'
    createdAt: 'DateTime'
    gallery: 'UploadFileRelationResponseCollection'
    publishedAt: 'DateTime'
    slug: 'String'
    tags: 'TagRelationResponseCollection'
    title: 'String'
    updatedAt: 'DateTime'
  }
  ArticleEntity: { // field return type name
    attributes: 'Article'
    id: 'ID'
  }
  ArticleEntityResponse: { // field return type name
    data: 'ArticleEntity'
  }
  ArticleEntityResponseCollection: { // field return type name
    data: 'ArticleEntity'
    meta: 'ResponseCollectionMeta'
  }
  ArticleRelationResponseCollection: { // field return type name
    data: 'ArticleEntity'
  }
  Author: { // field return type name
    avatar: 'UploadFileEntityResponse'
    createdAt: 'DateTime'
    name: 'String'
    updatedAt: 'DateTime'
  }
  AuthorEntity: { // field return type name
    attributes: 'Author'
    id: 'ID'
  }
  AuthorEntityResponse: { // field return type name
    data: 'AuthorEntity'
  }
  AuthorEntityResponseCollection: { // field return type name
    data: 'AuthorEntity'
    meta: 'ResponseCollectionMeta'
  }
  AuthorRelationResponseCollection: { // field return type name
    data: 'AuthorEntity'
  }
  ComponentSharedMetaSocial: { // field return type name
    description: 'String'
    id: 'ID'
    image: 'UploadFileEntityResponse'
    socialNetwork: 'ENUM_COMPONENTSHAREDMETASOCIAL_SOCIALNETWORK'
    title: 'String'
  }
  ComponentSharedSeo: { // field return type name
    canonicalURL: 'String'
    id: 'ID'
    keywords: 'String'
    metaDescription: 'String'
    metaImage: 'UploadFileEntityResponse'
    metaRobots: 'String'
    metaSocial: 'ComponentSharedMetaSocial'
    metaTitle: 'String'
    metaViewport: 'String'
    structuredData: 'JSON'
  }
  Error: { // field return type name
    code: 'String'
    message: 'String'
  }
  I18NLocale: { // field return type name
    code: 'String'
    createdAt: 'DateTime'
    name: 'String'
    updatedAt: 'DateTime'
  }
  I18NLocaleEntity: { // field return type name
    attributes: 'I18NLocale'
    id: 'ID'
  }
  I18NLocaleEntityResponse: { // field return type name
    data: 'I18NLocaleEntity'
  }
  I18NLocaleEntityResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
    meta: 'ResponseCollectionMeta'
  }
  I18NLocaleRelationResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
  }
  Link: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    image: 'UploadFileEntityResponse'
    link: 'String'
    tags: 'TagRelationResponseCollection'
    title: 'String'
    updatedAt: 'DateTime'
  }
  LinkEntity: { // field return type name
    attributes: 'Link'
    id: 'ID'
  }
  LinkEntityResponse: { // field return type name
    data: 'LinkEntity'
  }
  LinkEntityResponseCollection: { // field return type name
    data: 'LinkEntity'
    meta: 'ResponseCollectionMeta'
  }
  LinkRelationResponseCollection: { // field return type name
    data: 'LinkEntity'
  }
  Mutation: { // field return type name
    changePassword: 'UsersPermissionsLoginPayload'
    createArticle: 'ArticleEntityResponse'
    createAuthor: 'AuthorEntityResponse'
    createLink: 'LinkEntityResponse'
    createPost: 'PostEntityResponse'
    createQuote: 'QuoteEntityResponse'
    createTag: 'TagEntityResponse'
    createUploadFile: 'UploadFileEntityResponse'
    createUploadFolder: 'UploadFolderEntityResponse'
    createUsersPermissionsRole: 'UsersPermissionsCreateRolePayload'
    createUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    deleteArticle: 'ArticleEntityResponse'
    deleteAuthor: 'AuthorEntityResponse'
    deleteLink: 'LinkEntityResponse'
    deletePost: 'PostEntityResponse'
    deleteQuote: 'QuoteEntityResponse'
    deleteTag: 'TagEntityResponse'
    deleteUploadFile: 'UploadFileEntityResponse'
    deleteUploadFolder: 'UploadFolderEntityResponse'
    deleteUsersPermissionsRole: 'UsersPermissionsDeleteRolePayload'
    deleteUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    emailConfirmation: 'UsersPermissionsLoginPayload'
    forgotPassword: 'UsersPermissionsPasswordPayload'
    login: 'UsersPermissionsLoginPayload'
    multipleUpload: 'UploadFileEntityResponse'
    register: 'UsersPermissionsLoginPayload'
    removeFile: 'UploadFileEntityResponse'
    resetPassword: 'UsersPermissionsLoginPayload'
    updateArticle: 'ArticleEntityResponse'
    updateAuthor: 'AuthorEntityResponse'
    updateFileInfo: 'UploadFileEntityResponse'
    updateLink: 'LinkEntityResponse'
    updatePost: 'PostEntityResponse'
    updateQuote: 'QuoteEntityResponse'
    updateTag: 'TagEntityResponse'
    updateUploadFile: 'UploadFileEntityResponse'
    updateUploadFolder: 'UploadFolderEntityResponse'
    updateUsersPermissionsRole: 'UsersPermissionsUpdateRolePayload'
    updateUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    upload: 'UploadFileEntityResponse'
  }
  Pagination: { // field return type name
    page: 'Int'
    pageCount: 'Int'
    pageSize: 'Int'
    total: 'Int'
  }
  Post: { // field return type name
    author: 'AuthorEntityResponse'
    content: 'UploadFileEntityResponse'
    createdAt: 'DateTime'
    link: 'String'
    message: 'String'
    publishedAt: 'DateTime'
    slug: 'String'
    tags: 'TagRelationResponseCollection'
    title: 'String'
    updatedAt: 'DateTime'
  }
  PostEntity: { // field return type name
    attributes: 'Post'
    id: 'ID'
  }
  PostEntityResponse: { // field return type name
    data: 'PostEntity'
  }
  PostEntityResponseCollection: { // field return type name
    data: 'PostEntity'
    meta: 'ResponseCollectionMeta'
  }
  PostRelationResponseCollection: { // field return type name
    data: 'PostEntity'
  }
  Query: { // field return type name
    article: 'ArticleEntityResponse'
    articles: 'ArticleEntityResponseCollection'
    author: 'AuthorEntityResponse'
    authors: 'AuthorEntityResponseCollection'
    i18NLocale: 'I18NLocaleEntityResponse'
    i18NLocales: 'I18NLocaleEntityResponseCollection'
    link: 'LinkEntityResponse'
    links: 'LinkEntityResponseCollection'
    me: 'UsersPermissionsMe'
    post: 'PostEntityResponse'
    posts: 'PostEntityResponseCollection'
    quote: 'QuoteEntityResponse'
    quotes: 'QuoteEntityResponseCollection'
    tag: 'TagEntityResponse'
    tags: 'TagEntityResponseCollection'
    uploadFile: 'UploadFileEntityResponse'
    uploadFiles: 'UploadFileEntityResponseCollection'
    uploadFolder: 'UploadFolderEntityResponse'
    uploadFolders: 'UploadFolderEntityResponseCollection'
    usersPermissionsRole: 'UsersPermissionsRoleEntityResponse'
    usersPermissionsRoles: 'UsersPermissionsRoleEntityResponseCollection'
    usersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    usersPermissionsUsers: 'UsersPermissionsUserEntityResponseCollection'
  }
  Quote: { // field return type name
    author: 'String'
    context: 'String'
    createdAt: 'DateTime'
    link: 'String'
    quote: 'String'
    tags: 'TagRelationResponseCollection'
    updatedAt: 'DateTime'
  }
  QuoteEntity: { // field return type name
    attributes: 'Quote'
    id: 'ID'
  }
  QuoteEntityResponse: { // field return type name
    data: 'QuoteEntity'
  }
  QuoteEntityResponseCollection: { // field return type name
    data: 'QuoteEntity'
    meta: 'ResponseCollectionMeta'
  }
  QuoteRelationResponseCollection: { // field return type name
    data: 'QuoteEntity'
  }
  ResponseCollectionMeta: { // field return type name
    pagination: 'Pagination'
  }
  Tag: { // field return type name
    articles: 'ArticleRelationResponseCollection'
    color: 'String'
    createdAt: 'DateTime'
    links: 'LinkRelationResponseCollection'
    name: 'String'
    posts: 'PostRelationResponseCollection'
    quotes: 'QuoteRelationResponseCollection'
    updatedAt: 'DateTime'
  }
  TagEntity: { // field return type name
    attributes: 'Tag'
    id: 'ID'
  }
  TagEntityResponse: { // field return type name
    data: 'TagEntity'
  }
  TagEntityResponseCollection: { // field return type name
    data: 'TagEntity'
    meta: 'ResponseCollectionMeta'
  }
  TagRelationResponseCollection: { // field return type name
    data: 'TagEntity'
  }
  UploadFile: { // field return type name
    alternativeText: 'String'
    caption: 'String'
    createdAt: 'DateTime'
    ext: 'String'
    formats: 'JSON'
    hash: 'String'
    height: 'Int'
    mime: 'String'
    name: 'String'
    previewUrl: 'String'
    provider: 'String'
    provider_metadata: 'JSON'
    related: 'GenericMorph'
    size: 'Float'
    updatedAt: 'DateTime'
    url: 'String'
    width: 'Int'
  }
  UploadFileEntity: { // field return type name
    attributes: 'UploadFile'
    id: 'ID'
  }
  UploadFileEntityResponse: { // field return type name
    data: 'UploadFileEntity'
  }
  UploadFileEntityResponseCollection: { // field return type name
    data: 'UploadFileEntity'
    meta: 'ResponseCollectionMeta'
  }
  UploadFileRelationResponseCollection: { // field return type name
    data: 'UploadFileEntity'
  }
  UploadFolder: { // field return type name
    children: 'UploadFolderRelationResponseCollection'
    createdAt: 'DateTime'
    files: 'UploadFileRelationResponseCollection'
    name: 'String'
    parent: 'UploadFolderEntityResponse'
    path: 'String'
    pathId: 'Int'
    updatedAt: 'DateTime'
  }
  UploadFolderEntity: { // field return type name
    attributes: 'UploadFolder'
    id: 'ID'
  }
  UploadFolderEntityResponse: { // field return type name
    data: 'UploadFolderEntity'
  }
  UploadFolderEntityResponseCollection: { // field return type name
    data: 'UploadFolderEntity'
    meta: 'ResponseCollectionMeta'
  }
  UploadFolderRelationResponseCollection: { // field return type name
    data: 'UploadFolderEntity'
  }
  UsersPermissionsCreateRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsDeleteRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsLoginPayload: { // field return type name
    jwt: 'String'
    user: 'UsersPermissionsMe'
  }
  UsersPermissionsMe: { // field return type name
    blocked: 'Boolean'
    confirmed: 'Boolean'
    email: 'String'
    id: 'ID'
    role: 'UsersPermissionsMeRole'
    username: 'String'
  }
  UsersPermissionsMeRole: { // field return type name
    description: 'String'
    id: 'ID'
    name: 'String'
    type: 'String'
  }
  UsersPermissionsPasswordPayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsPermission: { // field return type name
    action: 'String'
    createdAt: 'DateTime'
    role: 'UsersPermissionsRoleEntityResponse'
    updatedAt: 'DateTime'
  }
  UsersPermissionsPermissionEntity: { // field return type name
    attributes: 'UsersPermissionsPermission'
    id: 'ID'
  }
  UsersPermissionsPermissionEntityResponse: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsPermissionRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsRole: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    name: 'String'
    permissions: 'UsersPermissionsPermissionRelationResponseCollection'
    type: 'String'
    updatedAt: 'DateTime'
    users: 'UsersPermissionsUserRelationResponseCollection'
  }
  UsersPermissionsRoleEntity: { // field return type name
    attributes: 'UsersPermissionsRole'
    id: 'ID'
  }
  UsersPermissionsRoleEntityResponse: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsRoleRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsUpdateRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsUser: { // field return type name
    blocked: 'Boolean'
    confirmed: 'Boolean'
    createdAt: 'DateTime'
    email: 'String'
    provider: 'String'
    role: 'UsersPermissionsRoleEntityResponse'
    updatedAt: 'DateTime'
    username: 'String'
  }
  UsersPermissionsUserEntity: { // field return type name
    attributes: 'UsersPermissionsUser'
    id: 'ID'
  }
  UsersPermissionsUserEntityResponse: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsUserRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
}

export interface NexusGenArgTypes {
  Article: {
    gallery: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    tags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentSharedSeo: {
    metaSocial: { // args
      filters?: NexusGenInputs['ComponentSharedMetaSocialFiltersInput'] | null; // ComponentSharedMetaSocialFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Link: {
    tags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Mutation: {
    changePassword: { // args
      currentPassword: string; // String!
      password: string; // String!
      passwordConfirmation: string; // String!
    }
    createArticle: { // args
      data: NexusGenInputs['ArticleInput']; // ArticleInput!
    }
    createAuthor: { // args
      data: NexusGenInputs['AuthorInput']; // AuthorInput!
    }
    createLink: { // args
      data: NexusGenInputs['LinkInput']; // LinkInput!
    }
    createPost: { // args
      data: NexusGenInputs['PostInput']; // PostInput!
    }
    createQuote: { // args
      data: NexusGenInputs['QuoteInput']; // QuoteInput!
    }
    createTag: { // args
      data: NexusGenInputs['TagInput']; // TagInput!
    }
    createUploadFile: { // args
      data: NexusGenInputs['UploadFileInput']; // UploadFileInput!
    }
    createUploadFolder: { // args
      data: NexusGenInputs['UploadFolderInput']; // UploadFolderInput!
    }
    createUsersPermissionsRole: { // args
      data: NexusGenInputs['UsersPermissionsRoleInput']; // UsersPermissionsRoleInput!
    }
    createUsersPermissionsUser: { // args
      data: NexusGenInputs['UsersPermissionsUserInput']; // UsersPermissionsUserInput!
    }
    deleteArticle: { // args
      id: string; // ID!
    }
    deleteAuthor: { // args
      id: string; // ID!
    }
    deleteLink: { // args
      id: string; // ID!
    }
    deletePost: { // args
      id: string; // ID!
    }
    deleteQuote: { // args
      id: string; // ID!
    }
    deleteTag: { // args
      id: string; // ID!
    }
    deleteUploadFile: { // args
      id: string; // ID!
    }
    deleteUploadFolder: { // args
      id: string; // ID!
    }
    deleteUsersPermissionsRole: { // args
      id: string; // ID!
    }
    deleteUsersPermissionsUser: { // args
      id: string; // ID!
    }
    emailConfirmation: { // args
      confirmation: string; // String!
    }
    forgotPassword: { // args
      email: string; // String!
    }
    login: { // args
      input: NexusGenInputs['UsersPermissionsLoginInput']; // UsersPermissionsLoginInput!
    }
    multipleUpload: { // args
      field?: string | null; // String
      files: Array<NexusGenScalars['Upload'] | null>; // [Upload]!
      ref?: string | null; // String
      refId?: string | null; // ID
    }
    register: { // args
      input: NexusGenInputs['UsersPermissionsRegisterInput']; // UsersPermissionsRegisterInput!
    }
    removeFile: { // args
      id: string; // ID!
    }
    resetPassword: { // args
      code: string; // String!
      password: string; // String!
      passwordConfirmation: string; // String!
    }
    updateArticle: { // args
      data: NexusGenInputs['ArticleInput']; // ArticleInput!
      id: string; // ID!
    }
    updateAuthor: { // args
      data: NexusGenInputs['AuthorInput']; // AuthorInput!
      id: string; // ID!
    }
    updateFileInfo: { // args
      id: string; // ID!
      info?: NexusGenInputs['FileInfoInput'] | null; // FileInfoInput
    }
    updateLink: { // args
      data: NexusGenInputs['LinkInput']; // LinkInput!
      id: string; // ID!
    }
    updatePost: { // args
      data: NexusGenInputs['PostInput']; // PostInput!
      id: string; // ID!
    }
    updateQuote: { // args
      data: NexusGenInputs['QuoteInput']; // QuoteInput!
      id: string; // ID!
    }
    updateTag: { // args
      data: NexusGenInputs['TagInput']; // TagInput!
      id: string; // ID!
    }
    updateUploadFile: { // args
      data: NexusGenInputs['UploadFileInput']; // UploadFileInput!
      id: string; // ID!
    }
    updateUploadFolder: { // args
      data: NexusGenInputs['UploadFolderInput']; // UploadFolderInput!
      id: string; // ID!
    }
    updateUsersPermissionsRole: { // args
      data: NexusGenInputs['UsersPermissionsRoleInput']; // UsersPermissionsRoleInput!
      id: string; // ID!
    }
    updateUsersPermissionsUser: { // args
      data: NexusGenInputs['UsersPermissionsUserInput']; // UsersPermissionsUserInput!
      id: string; // ID!
    }
    upload: { // args
      field?: string | null; // String
      file: NexusGenScalars['Upload']; // Upload!
      info?: NexusGenInputs['FileInfoInput'] | null; // FileInfoInput
      ref?: string | null; // String
      refId?: string | null; // ID
    }
  }
  Post: {
    tags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Query: {
    article: { // args
      id?: string | null; // ID
    }
    articles: { // args
      filters?: NexusGenInputs['ArticleFiltersInput'] | null; // ArticleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    author: { // args
      id?: string | null; // ID
    }
    authors: { // args
      filters?: NexusGenInputs['AuthorFiltersInput'] | null; // AuthorFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    i18NLocale: { // args
      id?: string | null; // ID
    }
    i18NLocales: { // args
      filters?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    link: { // args
      id?: string | null; // ID
    }
    links: { // args
      filters?: NexusGenInputs['LinkFiltersInput'] | null; // LinkFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    post: { // args
      id?: string | null; // ID
    }
    posts: { // args
      filters?: NexusGenInputs['PostFiltersInput'] | null; // PostFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    quote: { // args
      id?: string | null; // ID
    }
    quotes: { // args
      filters?: NexusGenInputs['QuoteFiltersInput'] | null; // QuoteFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    tag: { // args
      id?: string | null; // ID
    }
    tags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    uploadFile: { // args
      id?: string | null; // ID
    }
    uploadFiles: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    uploadFolder: { // args
      id?: string | null; // ID
    }
    uploadFolders: { // args
      filters?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsRole: { // args
      id?: string | null; // ID
    }
    usersPermissionsRoles: { // args
      filters?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsUser: { // args
      id?: string | null; // ID
    }
    usersPermissionsUsers: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Quote: {
    tags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Tag: {
    articles: { // args
      filters?: NexusGenInputs['ArticleFiltersInput'] | null; // ArticleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    links: { // args
      filters?: NexusGenInputs['LinkFiltersInput'] | null; // LinkFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    posts: { // args
      filters?: NexusGenInputs['PostFiltersInput'] | null; // PostFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    quotes: { // args
      filters?: NexusGenInputs['QuoteFiltersInput'] | null; // QuoteFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  UploadFolder: {
    children: { // args
      filters?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    files: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  UsersPermissionsRole: {
    permissions: { // args
      filters?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    users: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  GenericMorph: "Article" | "Author" | "ComponentSharedMetaSocial" | "ComponentSharedSeo" | "I18NLocale" | "Link" | "Post" | "Quote" | "Tag" | "UploadFile" | "UploadFolder" | "UsersPermissionsPermission" | "UsersPermissionsRole" | "UsersPermissionsUser"
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "GenericMorph";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}