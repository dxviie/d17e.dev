---
interface Props {
  color?: string;
  size?: string;
}

const {color = "var(--bg-color)", size = "24px"} = Astro.props;
const pathname = Astro.url.pathname;
const isProjectsIndex = pathname.endsWith('projects/') || pathname.endsWith('projects');
---
<div class={`${isProjectsIndex ? "active" : ""} svg-container projects-icon`}>
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill={color} stroke={color} stroke-width="2"
       stroke-linecap="round" stroke-linejoin="round" class="rotating-svg" width="50%" height="50%">
    <path d="M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z"/>
    <path d="M12 15l-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z"/>
    <path d="M9 12H4s.55-3.03 2-4c1.45-.97 2-.5 2-.5"/>
    <path d="M12 15v5s3.03-.55 4-2c.97-1.45.5-2 .5-2"/>
  </svg>
</div>

<style>
    .projects-icon {
        background-color: var(--color);
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
    }

    .active {
        background-color: var(--bg-color);
    }

    .svg-container {
        display: flex;
        justify-content: center;
    }

    .rotating-svg {
        transition: transform 0.3s ease;
    }

    .svg-container:hover .rotating-svg {
        transform: rotate(180deg) !important;
    }
</style>
