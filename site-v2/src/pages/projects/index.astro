---
import {SITE_TITLE, SITE_DESCRIPTION} from '../../consts';
import {getCollection} from 'astro:content';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import BaseHead from "../../components/BaseHead.astro";
import MediaAsset from "../../components/MediaAsset.astro";
import Markdown from "../../components/Markdown.astro";
import SocialLinks from "../../components/SocialLinks.astro";
import FindMeOn from "../../components/FindMeOn.astro";
import BaseBallCard from "../../components/BaseBallCard.astro";

const projects = (await getCollection('projects')).sort(
  (a, b) => (b.data.startDate?.valueOf() || 0) - (a.data.startDate?.valueOf() || 0),
);
---

<!doctype html>
<html lang="en">
<head>
  <title>{SITE_TITLE} | Projects</title>
  <BaseHead title={`${SITE_TITLE} | Projects`} description={SITE_DESCRIPTION}/>
  <style>
      main {
          display: flex;
          flex-direction: row;
          justify-content: center;
          overflow: scroll;
          margin: 2.4rem 0;
          width: 100vw;
          max-width: 100vw;
          padding: 2rem 0;
      }

      .page-intro {
          font-family: 'nudica_monolight', serif !important;
          font-size: 1rem;
          max-width: 960px;
          margin: 0 auto 1rem;
          padding: 0 .5rem;
          display: flex;
          flex-direction: column;
          gap: .3rem;
      }

      .header-container {
          display: flex;
          justify-content: space-between;
          align-items: center;
          width: 100%;
          max-width: 960px;
          align-self: center;
          margin-bottom: .5rem;
          border-bottom: 1px solid var(--border-color);
          padding-bottom: 0.5rem;
      }

      .header-container.zooming {
          justify-content: end;;
      }

      .page-title {
          font-family: 'nudica_monobold', serif;
          margin: 0;
      }

      .media-container {
          position: relative;
          width: 100%;
          aspect-ratio: 1;
          overflow: hidden;
          transition: all 0.3s ease;
      }

      .title-overlay {
          position: absolute;
          bottom: 0;
          left: 0;
          right: 0;
          padding: 1rem;
          background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
          color: white;
          z-index: 1;
      }

      .title-overlay h2 {
          margin: 0;
          font-family: 'nudica_monobold', serif;
          color: white;
          padding: 0.2rem 0.5rem;
          font-size: 1.5rem;
          text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
      }

      .title-overlay .date {
          background-color: var(--color);
          color: var(--bg-color);
          padding: 0.2rem 0.5rem;
          font-family: 'nudica_monolight', serif;
          margin: 0.5rem 0 0;
          font-size: 0.9rem;
      }

      .content {
          padding: 1rem;
          display: none; /* Hide the original content area since we're using overlay */
      }

      .cards-container {
          display: flex;
          flex-direction: row;
          flex-wrap: wrap;
          justify-content: center;
          gap: 20px;
          overflow-x: auto;
          scroll-behavior: smooth;
          -webkit-overflow-scrolling: touch;
          scrollbar-width: none; /* Firefox */
          -ms-overflow-style: none; /* IE and Edge */
      }

      .cards-container::-webkit-scrollbar {
          display: none; /* Chrome, Safari and Opera */
      }

      .card-wrapper {
          flex: 0 0 auto;
      }

      /* Optional: Add scroll indicators */
      .container::before,
      .container::after {
          content: '';
          position: fixed;
          top: 0;
          bottom: 0;
          width: 40px;
          pointer-events: none;
          z-index: 1;
      }

      .container::before {
          left: 0;
          background: linear-gradient(to right, rgba(255, 255, 255, 0.9), transparent);
      }

      .container::after {
          right: 0;
          background: linear-gradient(to left, rgba(255, 255, 255, 0.9), transparent);
      }

      @media (max-width: 1650px) {
          ul li {
              width: calc(50% - 1rem);
          }

          ul {
              gap: 1rem;
          }

          .title-overlay h2 {
              font-size: 1.2rem;
          }
      }

      @media (max-width: 768px) {
          /* Hide text and gradient overlay in multi-card view */
          .multi-card-view .title-overlay {
              display: none !important;
          }

          /* Adjust the media container for multi-card view */
          .multi-card-view .media-container {
              aspect-ratio: 1; /* Wider aspect ratio for smaller cards */
          }

          /* Adjust the image scaling for better grid view */
          .multi-card-view .media-asset img,
          .multi-card-view figure img {
              transform: scale(1) !important;
              object-fit: cover;
          }

          .title-overlay h2 {
              font-size: 1.2rem;
          }
      }
  </style>
</head>
<body>
<Header/>
<main>
  <div class="cards-container" id="scrollContainer">
    {projects.map(project => (
            <div class="card-wrapper">
              <BaseBallCard name={project.data.name} imageUrl={"/assets/" + project.data.cover.id + ".webp"} team="Foxes" year="1982"
                            position="frontback"/>
            </div>
    ))}
  </div>
</main>
<FindMeOn/>
<Footer/>

<script>
  // Initialize zoom controls and video hover functionality
  document.addEventListener('DOMContentLoaded', () => {
    initVideoHover();
  });

  // Handle Astro view transitions
  document.addEventListener('astro:page-load', () => {
    initVideoHover();
  });

  function initVideoHover() {
    const videos = document.querySelectorAll('video');

    videos.forEach(video => {
      const listItem = video.closest('li');

      if (listItem) {
        listItem.addEventListener('mouseenter', () => {
          video.play();
        });

        listItem.addEventListener('mouseleave', () => {
          video.pause();
          // Reset to first frame
          video.currentTime = 0.1;
        });
      }
    });
  }
</script>
</body>
</html>

